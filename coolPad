-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- States
local flyingEnabled = false
local flying = false
local highlightsEnabled = true
local speed = 50
local bodyGyro, bodyVelocity, flyConnection

local control = {F = 0, L = 0, U = 0, D = 0}
local highlightList = {}
local nameTagList = {}

-- Highlights & Name Tags
local function ensureHighlight(character)
	if not character:FindFirstChild("Highlight") then
		local highlight = Instance.new("Highlight", character)
		highlight.FillColor = Color3.fromRGB(0, 170, 255)
		highlight.OutlineColor = Color3.new(0, 0, 0)
		highlight.Enabled = highlightsEnabled
		table.insert(highlightList, highlight)
	end
end

local function ensureNameTag(character, playerName)
	local head = character:FindFirstChild("Head")
	if head and not head:FindFirstChild("NameTag") then
		local billboard = Instance.new("BillboardGui", head)
		billboard.Name = "NameTag"
		billboard.Adornee = head
		billboard.Size = UDim2.new(0, 120, 0, 18) -- slightly smaller height
		billboard.StudsOffset = Vector3.new(0, 2.5, 0)
		billboard.AlwaysOnTop = true
		billboard.Enabled = highlightsEnabled

		local label = Instance.new("TextLabel", billboard)
		label.Size = UDim2.new(1, 0, 1, 0)
		label.BackgroundTransparency = 1
		label.Text = playerName
		label.TextColor3 = Color3.fromRGB(0, 170, 255)
		label.TextStrokeTransparency = 0.5
		label.Font = Enum.Font.SourceSansBold
		label.TextScaled = true
		label.TextSize = 14

		table.insert(nameTagList, billboard)
	end
end

-- Monitor players
local function monitorPlayer(player)
	if player == LocalPlayer then return end
	local function onChar(char)
		ensureHighlight(char)
		ensureNameTag(char, player.Name)
	end
	if player.Character then onChar(player.Character) end
	player.CharacterAdded:Connect(onChar)
end

for _, p in ipairs(Players:GetPlayers()) do monitorPlayer(p) end
Players.PlayerAdded:Connect(monitorPlayer)

RunService.Heartbeat:Connect(function()
	for _, p in ipairs(Players:GetPlayers()) do
		if p ~= LocalPlayer and p.Character then
			ensureHighlight(p.Character)
			ensureNameTag(p.Character, p.Name)
		end
	end
end)

-- Flying Functions
local function startFly()
	if flying then return end
	local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
	local hrp = char:FindFirstChild("HumanoidRootPart")
	local hum = char:FindFirstChildOfClass("Humanoid")
	if not hrp or not hum then return end

	flying = true
	hum.PlatformStand = true

	bodyGyro = Instance.new("BodyGyro", hrp)
	bodyGyro.P = 90000
	bodyGyro.MaxTorque = Vector3.new(1e9, 1e9, 1e9)

	bodyVelocity = Instance.new("BodyVelocity", hrp)
	bodyVelocity.MaxForce = Vector3.new(1e9, 1e9, 1e9)
	bodyVelocity.P = 1250

	flyConnection = RunService.RenderStepped:Connect(function()
		if not flying then return end
		local cam = workspace.CurrentCamera
		local dir = Vector3.new(control.L, control.U + control.D, control.F)
		if dir.Magnitude > 0 then
			dir = cam.CFrame:VectorToWorldSpace(dir.Unit) * speed
		end
		bodyVelocity.Velocity = dir
		-- Face opposite side of camera
		bodyGyro.CFrame = CFrame.new(hrp.Position, hrp.Position - cam.CFrame.LookVector)
	end)
end

local function stopFly()
	flying = false
	local char = LocalPlayer.Character
	if char then
		local hum = char:FindFirstChildOfClass("Humanoid")
		if hum then hum.PlatformStand = false end
	end
	if bodyGyro then bodyGyro:Destroy() end
	if bodyVelocity then bodyVelocity:Destroy() end
	if flyConnection then flyConnection:Disconnect() flyConnection = nil end
	control = {F = 0, L = 0, U = 0, D = 0}
end

-- Input (corrected directions)
UserInputService.InputBegan:Connect(function(input, gpe)
	if gpe or not (flying and flyingEnabled) then return end

	if input.KeyCode == Enum.KeyCode.W then control.F = -1 end -- forward
	if input.KeyCode == Enum.KeyCode.S then control.F = 1 end  -- backward
	if input.KeyCode == Enum.KeyCode.A then control.L = -1 end
	if input.KeyCode == Enum.KeyCode.D then control.L = 1 end
	if input.KeyCode == Enum.KeyCode.Space then control.U = 1 end
	if input.KeyCode == Enum.KeyCode.LeftControl then control.D = -1 end
end)

UserInputService.InputEnded:Connect(function(input)
	if not flying then return end

	if input.KeyCode == Enum.KeyCode.W or input.KeyCode == Enum.KeyCode.S then control.F = 0 end
	if input.KeyCode == Enum.KeyCode.A or input.KeyCode == Enum.KeyCode.D then control.L = 0 end
	if input.KeyCode == Enum.KeyCode.Space then control.U = 0 end
	if input.KeyCode == Enum.KeyCode.LeftControl then control.D = 0 end
end)

-- UI
local function createUI()
	local gui = Instance.new("ScreenGui", PlayerGui)
	gui.Name = "ControlUI"
	gui.ResetOnSpawn = false

	-- Fly Button
	local flyBtn = Instance.new("TextButton", gui)
	flyBtn.Size = UDim2.new(0, 140, 0, 40)
	flyBtn.Position = UDim2.new(1, -150, 1, -100)
	flyBtn.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	flyBtn.TextColor3 = Color3.new(1, 1, 1)
	flyBtn.Font = Enum.Font.SourceSansBold
	flyBtn.TextSize = 18
	flyBtn.Text = "Fly: OFF"
	flyBtn.MouseButton1Click:Connect(function()
		flyingEnabled = not flyingEnabled
		flyBtn.Text = "Fly: " .. (flyingEnabled and "ON" or "OFF")
		if flyingEnabled then startFly() else stopFly() end
	end)

	-- Highlights Button
	local hlBtn = Instance.new("TextButton", gui)
	hlBtn.Size = UDim2.new(0, 140, 0, 40)
	hlBtn.Position = UDim2.new(1, -150, 1, -50)
	hlBtn.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	hlBtn.TextColor3 = Color3.new(1, 1, 1)
	hlBtn.Font = Enum.Font.SourceSansBold
	hlBtn.TextSize = 18
	hlBtn.Text = "Highlights: ON"
	hlBtn.MouseButton1Click:Connect(function()
		highlightsEnabled = not highlightsEnabled
		hlBtn.Text = "Highlights: " .. (highlightsEnabled and "ON" or "OFF")
		for _, h in ipairs(highlightList) do if h and h.Parent then h.Enabled = highlightsEnabled end end
		for _, tag in ipairs(nameTagList) do if tag and tag.Parent then tag.Enabled = highlightsEnabled end end
	end)
end

createUI()

-- Ensure flying resumes after respawn/teleport
LocalPlayer.CharacterAdded:Connect(function()
	if flyingEnabled then
		task.wait(0.25)
		startFly()
	end
end)
